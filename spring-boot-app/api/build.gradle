plugins {
    id 'org.openapi.generator' version '7.2.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '19'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'build/generate-resources/main/src/main/java'
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }
}

springBoot {
    mainClass = 'org.example.ApiApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.17'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation project(':service')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(AbstractCopyTask).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.register('cleanGeneratedFiles', Delete) {
    delete "$projectDir/build/generate-resources/main/src/main/java/generatedapi"
    delete "$projectDir/build/generate-resources/main/.openapi-generator"
}

cleanGeneratedFiles.doLast {
    println "Cleaning previously generated files..."
}

openApiGenerate {
    inputSpec = "$projectDir/src/main/resources/openapi.yaml"
    generatorName = "spring"
    library = "spring-boot"
    modelNameSuffix = "Dto"
    modelPackage = "generatedapi.model"
    apiPackage = "generatedapi"
    invokerPackage = "generatedapi.invoker"
    generateModelDocumentation = false
    generateApiDocumentation = false

    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: "true",
            skipDefaultInterface: "true",
    ]

    globalProperties = [
            apis: "",
            models: "",
            supportingFiles: "false"
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
